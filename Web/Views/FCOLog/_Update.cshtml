@using ViewModels;
@using Web.Extensions;
@using Enums;
@model FCOLogModifyViewModel
@{
    Layout = null;
    var isAdmin = User.IsInRole("SuperAdmin") || User.IsInRole("Administrator");
    var labourSection = Model.FCOSections.Where(x => x.SectionType == FCOSectionCatalog.Labour).ToList();
    var materialSection = Model.FCOSections.Where(x => x.SectionType == FCOSectionCatalog.Material).ToList();
    var equipmentSection = Model.FCOSections.Where(x => x.SectionType == FCOSectionCatalog.Equipment).ToList();
    var shopSection = Model.FCOSections.Where(x => x.SectionType == FCOSectionCatalog.Shop).ToList();
}
<style>
    .image-container {
        position: relative;
        display: inline-block;
        margin: 10px;
    }

    .remove-icon {
        position: absolute;
        top: 0;
        right: 0;
        width: 20px;
        height: 20px;
        cursor: pointer;
        background-color: #fff;
        border-radius: 50%;
        display: none;
    }

    .image-container:hover .remove-icon {
        display: block;
    }
</style>

<div class="row">
    <div class="col-lg-12">
        <div class="row">
            <div class="col-lg-4">
                <div class="mb-3">
                    <label asp-for="Date" class="form-label fw-600"></label>
                    <input asp-for="Date" type="date" class="form-control" />
                    <span asp-validation-for="Date" class="validation-invalid-label"></span>
                </div>
            </div>

            @*  <div class="col-lg-4">
            <div class="mb-3">
            <partial name="~/Views/Shared/Select2/_Contractor.cshtml" for="Contractor" view-data='@new ViewDataDictionary(ViewData) { { "Label", "Requestor Name/Contractor" } }' />
            </div>
            </div>*@
            @* <div class="col-lg-4">
            <div class="mb-3">
            <partial name="~/Views/Shared/Select2/_Department.cshtml" for="Department" view-data='@new ViewDataDictionary(ViewData) { { "Label", "Department/Extension" } }' />
            </div>
            </div>*@
            <div class="col-lg-4">
                <div class="mb-3">
                    <partial name="~/Views/Shared/Select2/_Unit.cshtml" for="Unit" />
                </div>
            </div>
            <div class="col-lg-4">
                <div class="mb-3">
                    <label asp-for="Location" class="form-label fw-600"></label>
                    <input asp-for="Location" class="form-control" />
                    <span asp-validation-for="Location" class="validation-invalid-label"></span>
                </div>
            </div>
            <div class="col-lg-4">
                <div class="mb-3">
                    <label class="form-label fw-600">Pre TA / TA</label>
                    <div class="form-check">
                        <input class="form-check-input" type="radio" asp-for="PreTA" value="true">
                        <label class="form-check-label" asp-for="PreTA">Pre TA</label>
                    </div>
                    <div class="form-check">
                        <input class="form-check-input" type="radio" asp-for="PreTA" value="false">
                        <label class="form-check-label" asp-for="PreTA">TA</label>
                    </div>
                </div>
            </div>
            <div class="col-lg-4">
                <div class="mb-3">
                    <label class="form-label fw-600">Shutdown required?</label>
                    <div class="form-check">
                        <input class="form-check-input" type="radio" asp-for="ShutdownRequired" value="true">
                        <label class="form-check-label" asp-for="ShutdownRequired">Yes</label>
                    </div>
                    <div class="form-check">
                        <input class="form-check-input" type="radio" asp-for="ShutdownRequired" value="false">
                        <label class="form-check-label" asp-for="ShutdownRequired">No</label>
                    </div>
                </div>
            </div>
            <div class="col-lg-4">
                <div class="mb-3">
                    <label class="form-label fw-600">Scaffold Required?</label>
                    <div class="form-check">
                        <input class="form-check-input" type="radio" asp-for="ScaffoldRequired" value="true">
                        <label class="form-check-label" asp-for="ScaffoldRequired">Yes</label>
                    </div>
                    <div class="form-check">
                        <input class="form-check-input" type="radio" asp-for="ScaffoldRequired" value="false">
                        <label class="form-check-label" asp-for="ScaffoldRequired">No</label>
                    </div>
                </div>
            </div>
            <div class="col-lg-6" id="file-container">
                <label asp-for="Photo.File" class="form-label fw-600">Photo</label>
                <input type="file" id="file" asp-for="Photo.File" class="form-control" />
                <input type="hidden" id="photo-id" asp-for="Photo.Id" class="form-control" />
                <input type="hidden" id="photo-entity-type" asp-for="Photo.EntityType" class="form-control" />
                <span asp-validation-for="Photo.File" class="validation-invalid-label"></span>
            </div>
            <div class="col-lg-6">
                <div class="mb-3">
                    <label asp-for="EquipmentNumber" class="form-label fw-600"></label>
                    <input asp-for="EquipmentNumber" type="text" class="form-control" />
                    <span asp-validation-for="EquipmentNumber" class="validation-invalid-label"></span>
                </div>
            </div>
            <div class="col-lg-6">
                <div class="mb-3">
                    <label asp-for="DescriptionOfFinding" class="form-label fw-600"></label>
                    <textarea asp-for="DescriptionOfFinding" type="text" class="form-control">@Model.DescriptionOfFinding</textarea>
                    <span asp-validation-for="DescriptionOfFinding" class="validation-invalid-label"></span>
                </div>
            </div>
            <div class="col-lg-6" id="file-container">
                <label asp-for="File.File" class="form-label fw-600"></label>
                <input type="file" id="file" asp-for="File.File" class="form-control" />
                <input type="hidden" id="file-id" asp-for="File.Id" class="form-control" />
                <input type="hidden" id="file-entity-type" asp-for="File.EntityType" class="form-control" />
                <span asp-validation-for="File.File" class="validation-invalid-label"></span>
                @*<div class="image-container">
                <img src="@Model.File.Url" alt="Image">
                <div class="remove-icon" onclick="removeImage(this)">
                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24">
                <path d="M12 2c-5.523 0-10 4.477-10 10s4.477 10 10 10 10-4.477 10-10-4.477-10-10-10zm5 14.586l-1.414 1.414-4.586-4.586-4.586 4.586-1.414-1.414 4.586-4.586-4.586-4.586 1.414-1.414 4.586 4.586 4.586-4.586 1.414 1.414-4.586 4.586 4.586 4.586z" />
                </svg>
                </div>
                </div>*@
            </div>

            <div class="col-lg-4">
                <div class="mb-3">
                    <partial name="~/Views/Shared/Select2/_FCOType.cshtml" for="FCOType" />
                </div>
            </div>
            <div class="col-lg-4">
                <div class="mb-3">
                    <partial name="~/Views/Shared/Select2/_FCOReason.cshtml" for="FCOReason" />
                </div>
            </div>
            <div class="col-lg-4">
                <div class="mb-3">
                    <label class="form-label fw-600">Others Documentation Required</label>
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" asp-for="AnalysisOfAlternatives">
                        <label class="form-check-label" asp-for="AnalysisOfAlternatives"></label>
                    </div>
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" asp-for="EquipmentFailureReport">
                        <label class="form-check-label" asp-for="EquipmentFailureReport"></label>
                    </div>
                </div>
            </div>

            @* <div class="col-lg-12">
            <div class="mb-3">
            <label asp-for="AdditionalInformation" class="form-label fw-600"></label>
            <textarea asp-for="AdditionalInformation" type="text" class="form-control">@Model.AdditionalInformation</textarea>
            <span asp-validation-for="AdditionalInformation" class="validation-invalid-label"></span>
            </div>
            </div>*@
            <div class="col-lg-4">
                <div class="mb-3">
                    <partial name="~/Views/Shared/Select2/_Company.cshtml" for="Company" view-data='@new ViewDataDictionary(ViewData) { { "Label", "Company" } }' />
                </div>
            </div>
            <div class="col-md-12 mt-3">
                <div class="form-group costs-inputs-container row">
                    <h4 class="col-md-12">Labor</h4>
                    <span class="labour-override-type-td col-md-3">
                        <label class="form-label fw-600">Type<span style="color:red"> *</span></label>
                        <select asp-items="Html.GetEnumSelectList(typeof (OverrideTypeCatalog))" id="labour-override-type" class="labour-type form-control simple-dd"></select>
                    </span>
                    <span class="labour-head-count-td col-md-2">
                        <label class="form-label fw-600">MN<span style="color:red"> *</span></label>
                        <input type="number" name="head-count" value="" id="head-count" class="form-control head-count cost" placeholder="Head Count" />
                    </span>
                    <span class="labour-hours-td col-md-2">
                        <label class="form-label fw-600">DU<span style="color:red"> *</span></label>
                        <input type="number" name="labour-hours" value="" id="labour-hours" class="form-control labour-hours cost" placeholder="Hours" />
                    </span>
                    <span class="labour-craft-skill-td col-md-3">
                        @await Html.PartialAsync("~/Views/Shared/Select2/_CraftSkill.cshtml", (new ViewModels.OverrideLogs.CraftSkillBriefViewModel()), "CraftSkill")
                    </span>

                    <span class="text-center col-md-2">
                        <label class="form-label fw-600 w-100">Add</label>
                        <button type="button" class="add-cost btn-circle btn-sm" style="height: calc(1.5715em + 0.875rem + 2px);"><i class="icon-plus2"></i></button>
                    </span>
                </div>
            </div>
            <div class="table-responsive my-3" id="labour-table">
                <table class="table text-nowrap">
                    <thead>
                        <tr>
                            <th>Type</th>
                            <th>Craft</th>
                            <th>MN</th>
                            <th>DU</th>
                            @if (!User.IsInRole(RolesCatalog.Employee.ToString()))
                            {
                                <th>Estimate</th>
                            }
                            <th class="text-center" style="width: 20px;"><i class="icon-arrow-down12"></i></th>
                        </tr>
                    </thead>
                    <tbody class="labour-tbody">
                        @for (var i = 0; i < labourSection.Count(); i++)
                        {
                            @await Html.PartialAsync("~/Views/FCOLog/_LabourSectionRow.cshtml", labourSection[i], new ViewDataDictionary(ViewData) { { "RowNumber", i } })
                        }
                    </tbody>
                </table>
            </div>
            @* @await Html.PartialAsync("~/Views/FCOLog/_SectionTable.cshtml", materialSection, new ViewDataDictionary(ViewData) { { "Section", "material" }, { "SectionName", "Material" } })
            @await Html.PartialAsync("~/Views/FCOLog/_SectionTable.cshtml", equipmentSection, new ViewDataDictionary(ViewData) { { "Section", "equipment" }, { "SectionName", "Equipment" } })
            @await Html.PartialAsync("~/Views/FCOLog/_SectionTable.cshtml", shopSection, new ViewDataDictionary(ViewData) { { "Section", "shop" }, { "SectionName", "Shop" } })
            *@

            <div class="col-lg-6">
                <div class="mb-3">
                    <label asp-for="MaterialName" class="form-label fw-600"></label>
                    <input asp-for="MaterialName" type="text" class="form-control" />
                    <span asp-validation-for="MaterialName" class="validation-invalid-label"></span>
                </div>
            </div>
            <div class="col-lg-6">
                <div class="mb-3">
                    <label asp-for="MaterialRate" class="form-label fw-600"></label>
                    <input asp-for="MaterialRate" type="number" min="0" class="form-control material-estimate est-rate" />
                    <span asp-validation-for="MaterialRate" class="validation-invalid-label"></span>
                </div>
            </div>
            <div class="col-lg-6">
                <div class="mb-3">
                    <label asp-for="EquipmentName" class="form-label fw-600"></label>
                    <input asp-for="EquipmentName" type="text" class="form-control" />
                    <span asp-validation-for="EquipmentName" class="validation-invalid-label"></span>
                </div>
            </div>
            <div class="col-lg-6">
                <div class="mb-3">
                    <label asp-for="EquipmentRate" class="form-label fw-600"></label>
                    <input asp-for="EquipmentRate" type="number" min="0" class="form-control equipment-estimate est-rate" />
                    <span asp-validation-for="EquipmentRate" class="validation-invalid-label"></span>
                </div>
            </div>

            <div class="col-lg-6">
                <div class="mb-3">
                    <label asp-for="ShopName" class="form-label fw-600"></label>
                    <input asp-for="ShopName" type="text" class="form-control" />
                    <span asp-validation-for="ShopName" class="validation-invalid-label"></span>
                </div>
            </div>
            <div class="col-lg-6">
                <div class="mb-3">
                    <label asp-for="ShopRate" class="form-label fw-600"></label>
                    <input asp-for="ShopRate" type="number" min="0" class="form-control shop-estimate est-rate" />
                    <span asp-validation-for="ShopRate" class="validation-invalid-label"></span>
                </div>
            </div>

            <div class="col-lg-12">
                <table class="table text-nowrap">
                    <tbody>
                        <tr>
                            <th>Total:</th>
                            <td></td>
                            <td id="total-estimate-cell">$@Model.Total</td>
                        </tr>
                        <tr>
                            <th>Contingency:</th>
                            <td>
                                <input asp-for="Contingency" type="number" class="form-control" id="contingency" min="0" max="100" />
                            </td>
                            <td id="contingency-cell">$@Model.Contingencies</td>
                        </tr>
                        <tr>
                            <th>Total:</th>
                            <td></td>
                            <td id="sub-total-cell">$@Model.SubTotal</td>
                        </tr>
                    </tbody>
                </table>
            </div>
            <div class="col-lg-12">
                <table class="table text-nowrap">
                    <tbody>
                        <tr>
                            <th colspan="2"><h4>FCO Value Estimate</h4></th>
                        </tr>
                        <tr>
                            <th>Labor:</th>
                            <td id="total-labour-cell">$@Model.TotalLabor</td>
                        </tr>
                        <tr>
                            <th>Material:</th>
                            <td id="total-material-cell">$@Model.TotalMaterial</td>
                        </tr>
                        <tr>
                            <th>Equipment:</th>
                            <td id="total-equipment-cell">$@Model.TotalEquipment</td>
                        </tr>
                        <tr>
                            <th>Shop:</th>
                            <td id="total-shop-cell">$@Model.TotalShop</td>
                        </tr>
                        <tr>
                            <th>TOTAL:</th>
                            <td id="actual-total-cell">$@Model.SectionTotal</td>
                        </tr>
                    </tbody>
                </table>
            </div>
            @*
            <div class="col-lg-4">
            <div class="mb-3">
            <label class="form-label fw-600" asp-for="DuringExecution"></label>
            <select asp-for="DuringExecution" asp-items="Html.GetEnumSelectList(typeof (DuringExecutionCatalog))" id="during-execution" class="form-control" data-placeholder="Select During Execution"><option></option></select>
            <span asp-validation-for="DuringExecution" class="validation-invalid-label"></span>
            </div>
            </div>*@
            <input asp-for="Approver.Id" type="hidden" />
        </div>
    </div>
</div>

<input asp-for="Status" type="hidden" id="status-id" />
<input asp-for="Employee.Id" type="hidden" />
<input asp-for="Id" type="hidden" />

<script>
    $(function () {
        //onAttachmentTypeChange($("#AttachmentType").val());

        $('#requester-id').on('change.select2', function (e) {
            if ($(this).select2('data')[0] === undefined) {
                $("#requestor-company").val("");
            }
            else {
                $("#requestor-company").val($(this).select2('data')[0].additionalAttributesModel.Company.Name);
            }
        });

        //$(document).on('change', "#AttachmentType", function () {
        //    onAttachmentTypeChange($(this).val());
        //});

        $('#requester-id').off('change.select2');
        $('#requester-id').on('change.select2', function (e) {
            if ($(this).select2('data')[0] === undefined) {
                $("#requestor-company").val("");
                $("#company-id").val("");
            }
            else {
                $("#requestor-company").val($(this).select2('data')[0].additionalAttributesModel.Company.Name);
                $("#company-id").val($(this).select2('data')[0].additionalAttributesModel.Company.Id);
            }
        });

        $('#delay-reason').on('change', function () {
            DelayReasonChanged();
        });
        $(document).off("click", ".add-cost");
        $(document).on("click", ".add-cost", function () {
            AddCost(this);

        });
        $(document).off("change", "#contingency,.est-rate");
        $(document).on("change", "#contingency, .est-rate", function () {
            Calculate();
        });
        $(document).off("click", ".remove-cost");
        $(document).on("click", ".remove-cost", function () {
            $(this).closest("tr").remove();
            RefreshInputIndexes("#labour-table tr", "labour-section-row", "FCOLabourSections");
        });

        $(document).on("input", ".rate-input", function () {
            AppendSignInElement(this, "$");
        });

    });

    function Calculate() {
        debugger;
        var labourEstimate = 0;
        $(".labour-estimate").each(function (i, v) { labourEstimate += parseFloat($(v).val()); });
        var materialEstimate = 0;
        $(".material-estimate").each(function (i, v) { materialEstimate += parseFloat($(v).val()); });
        var equipmentEstimate = 0;
        $(".equipment-estimate").each(function (i, v) { equipmentEstimate += parseFloat($(v).val()); });
        var shopEstimate = 0;
        $(".shop-estimate").each(function (i, v) { shopEstimate += parseFloat($(v).val()); });

        labourEstimate = parseFloat(labourEstimate.toFixed(2));
        equipmentEstimate = parseFloat(equipmentEstimate.toFixed(2));
        materialEstimate = parseFloat(materialEstimate.toFixed(2));
        shopEstimate = parseFloat(shopEstimate.toFixed(2));
        var contingency = parseFloat($("#contingency").val());
        contingency = contingency < 1 ? 1 : contingency;
        var labourContingency = parseFloat((labourEstimate / contingency).toFixed(2));
        var materialContingency = parseFloat((materialEstimate / contingency).toFixed(2));
        var equipmentContingency = parseFloat((equipmentEstimate / contingency).toFixed(2));
        var shopContingency = parseFloat((shopEstimate + (shopEstimate / contingency)).toFixed(2));
        var total = parseFloat((labourEstimate + materialEstimate + equipmentEstimate).toFixed(2));
        var totalContingency = parseFloat((labourContingency + materialContingency + equipmentContingency).toFixed(2));
        var subTotal = parseFloat((total + totalContingency).toFixed(2));

        var totalWithContingency = parseFloat((subTotal + shopEstimate + shopContingency).toFixed(2));

        //filling data in first table
        $("#total-estimate-cell").html("$" + total);
        $("#contingency-cell").html("$" + totalContingency);
        $("#sub-total-cell").html("$" + subTotal);

        //filling data in second table
        $("#total-labour-cell").html("$" + (labourEstimate + labourContingency).toFixed(2));
        $("#total-material-cell").html("$" + (materialEstimate + materialContingency).toFixed(2));
        $("#total-equipment-cell").html("$" + (equipmentEstimate + equipmentContingency).toFixed(2));
        $("#total-shop-cell").html("$" + (shopEstimate + shopContingency).toFixed(2));
        $("#actual-total-cell").html("$" + totalWithContingency);

    }

    function onAttachmentTypeChange(selectedValue) {
        if (@((int)AttachmentTypeCatalog.File)== selectedValue) {
            $("#link-container").hide();
            $("#file-container").show();
        }
        else {
            $("#file-container").hide();
            $("#link-container").show();
        }
    }
    function AddSectionElement(element, section, sectionType, ajaxUrl, tbodySelector, resetContainers, collectionType) {
        var thisElement = $(element);
        var sectionName = $("#" + section + "-name").val();
        var costHours = $("#" + section + "-hours").val();
        var headCount = $("#" + section + "-head-count").val();
        var rate = parseFloat($("#" + section + "-rate").val().replace("$", ""));

        if (sectionName != null && costHours != null && headCount != "" && headCount > 0 && costHours != "" && costHours > 0 && rate != null && rate > 0) {
            var rowNumber = $("." + section + "-row").length;
            var obj = {
                'Name': sectionName,
                'MN': headCount,
                'DU': costHours,
                'Rate': rate,
                'SectionType': sectionType
            }
            AddGridRow(obj, rowNumber, ajaxUrl, tbodySelector, section, collectionType);
            debugger;
            ResetInputs(resetContainers, []);
        }
        else {
            FireSwal("Name, MN, DU & Rate are required fields.");
        }
    }
    function AddCost(element) {
        var thisElement = $(element);
        var overrideType = $("#labour-override-type").val();
        var costHours = $("#labour-hours").val();
        var headCount = $("#head-count").val();
        var costCraftId = $('#craft-skill-id').select2('data')[0].id;
        var costCraftName = $('#craft-skill-id').select2('data')[0].text;
        if (overrideType !== null && overrideType !== "" && costHours != null && headCount != "" && headCount > 0 && costHours != "" && costHours > 0 && costCraftId != null && costCraftId != "") {
            var rowNumber = $(".labour-section-row").length;
            var obj = {
                'OverrideType': overrideType,
                'Craft': {
                    'Id': costCraftId,
                    'Name': costCraftName,
                    'STRate': $("#craft-skill-id").select2('data')[0].additionalAttributesModel.STRate,
                    'OTRate': $("#craft-skill-id").select2('data')[0].additionalAttributesModel.OTRate,
                    'DTRate': $("#craft-skill-id").select2('data')[0].additionalAttributesModel.DTRate,
                },
                'MN': headCount,
                'DU': costHours
            }
            AddGridRow(obj, rowNumber, "/FCOLog/_LabourSectionRow", "labour-table tbody");
            ResetInputs([".costs-inputs-container"], ["#craft-skill-id"]);
        }
        else {
            FireSwal("OverrideType, Craft, Head Count & Hours are required fields.");
        }
    }
    function FireSwal(errorMessage) {
        swal.fire({
            title: 'Validation Error',
            text: errorMessage,
            type: 'error',
            showCancelButton: true,
            confirmButtonText: "Okay",
            cancelButtonText: "Cancel",
            confirmButtonClass: 'btn btn-success',
            cancelButtonClass: 'btn btn-danger',
            buttonsStyling: false
        });
    }
    function ResetInputs(containers, select2Elements) {
        //to reset container elements
        $.each(containers, function (index, selector) {
            $(selector).find(':input').val(null);
        });
        //to reset select 2 elements
        $.each(select2Elements, function (index, selector) {
            $(selector).val('').trigger('change')
        });
    }

    function AddGridRow(obj, rowNumber, url, tbodyId, rowClass = '', collectionType = '') {
        $.ajax({
            url: url,
            type: "post",
            data: { model: obj, 'rowNumber': rowNumber, 'rowClass': rowClass, 'collectionType': collectionType },
            dataType: "html",
            success: function (response) {
                console.log(response);
                $('#' + tbodyId).append(response);
                Calculate();
            },
            error: function (jqXHR, textStatus, errorThrown) {
                console.log(textStatus, errorThrown);
            }
        });
    }
    function removeImage(icon) {
        const imageContainer = icon.closest('.image-container');
        imageContainer.remove();
    }
    function RefreshInputIndexes(trSelector, rowPrefix, collectionName) {
        var rowIndex = 0;
        $.each($(trSelector), function () {

            if ($(this).find('input').length > 1) {
                var id = $(this).attr("id");
                if (id != null && id != "") {
                    $(this).attr("id", rowPrefix + "-" + rowIndex);
                }
                $.each($(this).find('input'), function () {
                    if ($(this).attr('name').split(".").length > 2) {

                        $(this).attr("name", collectionName + "[" + rowIndex + "]." + $(this).attr('name').split(".")[1] + "." + $(this).attr('name').split(".")[2]);
                    }
                    else {
                        $(this).attr("name", collectionName + "[" + rowIndex + "]." + $(this).attr('name').split(".")[1]);
                    }
                });
                rowIndex++;
            }
        });
        Calculate();
    }</script>

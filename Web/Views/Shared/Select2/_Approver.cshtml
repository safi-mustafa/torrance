@using ViewModels;
@model IApproverBaseBriefViewModel

@{
    var elementId = ViewData["Id"] != null && !string.IsNullOrEmpty(ViewData["Id"].ToString()) ? ViewData["Id"].ToString() : "user-id";
    var title = ViewData["UserTitle"] != null && !string.IsNullOrEmpty(ViewData["UserTitle"].ToString()) ? ViewData["UserTitle"].ToString() : "Approver";
    var name = title + ".Name";
    var type = ViewData["Type"] != null && !string.IsNullOrEmpty(ViewData["Type"].ToString()) ? ViewData["Type"].ToString() : "Approver";
    var unitId = ViewData["UnitId"] != null && !string.IsNullOrEmpty(ViewData["UnitId"].ToString()) ? ViewData["UnitId"].ToString() : "unit-id";
    var label = "Select " + title;
    var isSearchForm = ViewData["IsSearchForm"] != null && !string.IsNullOrEmpty(ViewData["IsSearchForm"].ToString()) ? bool.Parse(ViewData["IsSearchForm"].ToString()) ? "true" : "false" : "false";
    var logType = ViewData["LogType"] != null && !string.IsNullOrEmpty(ViewData["LogType"].ToString()) ? ViewData["LogType"].ToString() : "None";
}


<div class="form-group">
    <label class="form-label fw-600">@title</label>
    @Html.DropDownListFor(model => model.Id, new List<SelectListItem>() {
    new SelectListItem()
    {
    Value = (Model!=null&&Model.Id > 0)?Model.Id.ToString():"",
    Text = (Model!=null&&Model.Id > 0)?Model.Name:"",
    Selected = (Model!=null&&Model.Id > 0)?true:false,
    }},
    new
    {
    @id = elementId,
    @class = "form-control disable-field",
    data_val_required = Model.IsValidationEnabled ? Model.ErrorMessage : "",
    data_val = Model.IsValidationEnabled.ToString().ToLower()
    })
    <input type="hidden" name="@name" value="@Model.Name" />
    @* <span asp-validation-for="Id" class="validation-invalid-label"></span>*@
</div>

<script src="~/js/custom-scripts/Select2Methods.js"></script>
<script>
    $(function () {
        var id = "#" + "@elementId";
        var unitId = "#" + "@unitId";
        var pageSize = 10;
        var url = '/Approver/Select2';
        var dataArray = function (params) {
            params.page = params.page || 1;
            return {
                prefix: params.term,
                pageSize: pageSize,
                pageNumber: params.page,
                customParams: JSON.stringify({
                    type: "@type",
                    Unit: {
                        Id: $(unitId).val()
                    },
                    IsSearchForm: "@isSearchForm",
                    LogType: "@logType"
                })

            };
        };
        Select2AutoCompleteAjax(id, url, dataArray, pageSize, "@label");
        $(unitId).on("change", function (e) {
            if ($(id).length > 0) {
                $(id).val(null).trigger('change');
            }
        });
    });
</script>

@using ViewModels.CRUD
@model CrudDetailViewModel
@{
    ViewData["Title"] = Model.Title;

}
<div class="card">
    <div class="card-body">
        <div class="row">
            <div class="col-md-12">
                 @if(ViewBag.Message!=null && !string.IsNullOrEmpty(ViewBag.Message.ToString())){
                    var className = ViewBag.Message.ToString().ToLower().Contains("rejected")?"danger":"success";
                    <div class="alert alert-@(className)" role="alert">
                        @ViewBag.Message.ToString()
                    </div>
                 }
            </div>
            <div class="col-md-12">
                @await Html.PartialAsync(Model.DetailViewPath, Model.DetailModel, new ViewDataDictionary(ViewData))
            </div>
            @if (Model.IsApprovalForm)
            {
                <div class="col-md-12">
                    <div class="form-group">
                        <div class="text-center">
                            <button type="button" onclick="rejectDetail(this)" class="btn btn-danger form-btn" id="reject-btn">Reject</button>
                            <button type="button" onclick="approveDetail(this)" class="btn blue-btn form-btn" id="approve-btn">Approve</button>
                        </div>
                    </div>
                </div>
            }
            else
            {
                <div class="col-md-12">
                    <div class="form-group">
                        <div class="text-center">
                            Log has been already Processed.
                        </div>
                    </div>
                </div>
            }
            <input type="hidden" id="modal-title" value="@Model.Title" />
        </div>
    </div>
</div>

<script src="~/js/crud/ajaxCrud.js"></script>
<script src="/js/masking/initiate-masking.js"></script>
